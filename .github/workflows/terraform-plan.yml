name: Terraform plan only

on:
  pull_request:
    branches: [ main, stagging, development ]
    paths-ignore:
      - "**.md"
  workflow_dispatch:


permissions:
  id-token: write
  issues: write
  contents: read
  pull-requests: write
  checks: write
  actions: write

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      env-selected: ${{ steps.select-environment.outputs.env-selected }}      
      tf_token: ${{ steps.set-value.outputs.tf_token }}
      tf_workspace: ${{ steps.set-value.outputs.tf_workspace }}


    steps:
      - name: "Select environment"
        id: select-environment
        run: |
          if [ "${{ github.base_ref }}" == "main" ]; then
            echo "Production environment selected for deployment - ${{ github.base_ref }} - ${{ github.ref_name }}"
            echo "env-selected=Production" >> $GITHUB_OUTPUT
          elif [ "${{ github.base_ref }}" == "stagging" ]; then
            echo "Stagging environment selected for deployment - ${{ github.base_ref }} - ${{ github.ref_name }}"
            echo "env-selected=Stagging" >> $GITHUB_OUTPUT
          elif [ "${{ github.base_ref }}" == "development" ]; then
            echo "Development environment selected for deployment - ${{ github.base_ref }} - ${{ github.ref_name }}"
            echo "env-selected=Development" >> $GITHUB_OUTPUT
          fi

      - name: "Set value"
        id: set-value
        run: |
          echo "::set-output name=tf_token::${{ secrets.TF_TOKEN }}"
          echo "::set-output name=tf_workspace::${{ vars.TF_WORKSPACE }}"

  terraform-plan:
    name: "Terraform plan"
    needs: [determine-environment]
    runs-on: ubuntu-latest
    environment: ${{ needs.determine-environment.outputs.env-selected }}
    steps:
      - uses: actions/checkout@v4

      - name: Compile
        run: echo pull-requests number - ${{ github.event.pull_request.number }}, environment - ${{ needs.determine-environment.outputs.env-selected }}, token - ${{ needs.determine-environment.outputs.tf_token }}, workspace - ${{ needs.determine-environment.outputs.tf_workspace }}
